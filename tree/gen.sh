#!/bin/sh

  sed -e 's+interface{}+int64+g' \
      -e 's+DefDesc = new(struct{})+Int64DefDesc = int64(math.MinInt64\+1)+'  \
      -e 's+DefAsc  = new(struct{})+Int64DefAsc  = int64(math.MinInt64\+2)+'  \
      -e 's+Desc: DefDesc, Asc: DefAsc+Desc: Int64DefDesc, Asc: Int64DefAsc+'  \
      -e 's+__generated_line_replacement__+Code generated by gen.sh; DO NOT EDIT.+' \
      -e 's+WalkFunc+Int64WalkFunc+g'  \
      -e 's+Node+Int64Node+g'  \
      -e 's+Codec+Int64Codec+g' \
      any_tree.go > int64_tree_gen.go

  sed -e 's+interface{}+uint64+g' \
      -e 's+DefDesc = new(struct{})+Uint64DefDesc = uint64(math.MaxUint64-1)+'  \
      -e 's+DefAsc  = new(struct{})+Uint64DefAsc  = uint64(math.MaxUint64-2)+'  \
      -e 's+Desc: DefDesc, Asc: DefAsc+Desc: Uint64DefDesc, Asc: Uint64DefAsc+'  \
      -e 's+__generated_line_replacement__+Code generated by gen.sh; DO NOT EDIT.+' \
      -e 's+WalkFunc+Uint64WalkFunc+g'  \
      -e 's+Node+Uint64Node+g'  \
      -e 's+Codec+Uint64Codec+g' \
      any_tree.go > uint64_tree_gen.go

  # sed -e 's+interface{}+int64+g' \
  #     -e 's+DefDesc = new(struct{})+Int64DefDesc = int64(-2)+g'  \
  #     -e 's+DefAsc  = new(struct{})+Int64DefAsc  = int64(-1)+g'  \
  #     -e 's+Def+Int64Def+g'  \
  #     -e 's+Walk+Int64Walk+g'  \
  #     -e 's+Node+Int64Node+g'  \
  #     -e 's+Codec+Int64Codec+g' \
  #     any_tree.go > int64_tree_generated.go

  # sed -e 's+interface{}+uint64+g' \
  #     -e 's+DefDesc = new(struct{})+Uint64DefDesc = uint64(-2)+g'  \
  #     -e 's+DefAsc  = new(struct{})+Uint64DefAsc  = uint64(-1)+g'  \
  #     -e 's+Def+Uint64Def+g'  \
  #     -e 's+Walk+Uint64Walk+g'  \
  #     -e 's+Node+Uint64Node+g'  \
  #     -e 's+Codec+Uint64Codec+g' \
  #     any_tree.go > uint64_tree_generated.go

